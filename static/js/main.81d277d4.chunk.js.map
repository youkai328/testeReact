{"version":3,"sources":["utils/LinkWrapper.js","Components/Header/Header.js","Components/Tabela/Tabela.js","Components/Toast/Toast.js","utils/FormValidator.js","utils/PopUp.js","Components/Formulario/Formulario.js","utils/ApiService.js","Pages/Home/Home.js","Pages/Sobre/Sobre.js","Pages/Livros/Livros.js","Pages/Autores/Autores.js","Pages/NotFound/NotFound.js","serviceWorker.js","index.js"],"names":["LinkWrapper","props","react_default","a","createElement","react_router_dom","Object","assign","activeStyle","fontWeight","Header","className","utils_LinkWrapper","to","Tabela","campos","dados","removeDado","CellDeleta","_ref","id","TableCell","Button","variant","color","onClick","Table","TableHead","TableRow","map","campo","index","key","titulo","TableBody","dado","Toast","open","handleClose","children","severity","Snackbar","onClose","autoHideDuration","auto","Alert","FormValidator","validacoes","classCallCheck","this","state","validacao","valido","forEach","regra","isInvalid","campoValor","toString","args","agrs","metodo","validador","apply","concat","toConsumableArray","validoQuando","mensagem","isValid","objectSpread","PopUp","exibeMensagem","status","msg","M","toast","html","classes","displayLength","Formulario","_this","possibleConstructorReturn","getPrototypeOf","call","escutadorDeInput","event","_event$target","target","name","value","setState","defineProperty","submitFormulario","valida","escutadorDeSubmit","stateInicial","erros","nome","livro","preco","filter","elem","reduce","texto","console","log","min","max","_this2","_this$state","Fragment","Grid","container","alignItems","spacing","item","TextField","label","onChange","type","Component","consumeApi","parameter","arguments","length","undefined","method","body","fetch","headers","content-type","then","res","ApiService","TrataErros","json","ListaAutores","CriaAutor","autor","ListaNomes","ListaLivros","RemoveAutor","ok","Error","responseText","Home","removeAutor","autoresAtualizado","autores","message","catch","err","JSON","stringify","data","react","Components_Header_Header","Components_Formulario_Formulario","Components_Tabela_Tabela","useEstilos","makeStyles","textAlign","Sobre","Container","maxWidth","Typography","component","Livros","livros","Autores","nomes","NotFound","Boolean","window","location","hostname","match","ReactDOM","render","react_router","path","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81d277d4.chunk.js","sourcesContent":["import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nconst LinkWrapper = props =>{\n    return (\n        <NavLink activeStyle={{fontWeight: \"bold\"}} {...props}/>\n    );\n}\nexport default LinkWrapper;","import React from 'react';\nimport LinkWrapper from '../../utils/LinkWrapper';\n\n\nconst Header = () => {\n    return (\n        <nav>\n    <div className=\"nav-wrapper indigo lighten-2\">\n      <LinkWrapper to=\"/\" className=\"brand-logo\" activeStyle={{}}>Casa do Código</LinkWrapper>\n      <ul className=\"right\">\n        <li><LinkWrapper to='/autores'>Autores</LinkWrapper></li>\n        <li><LinkWrapper to='/livros'>Livros</LinkWrapper></li>\n        <li><LinkWrapper to='/sobre'>Sobre</LinkWrapper></li>\n      </ul>\n    </div>\n  </nav>\n    );\n}\nexport default Header;","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\n\n\nconst Tabela = props => {\n\n    const { campos, dados, removeDado } = props;\n\n    const CellDeleta =({ removeDado, id }) => {\n        \n        if(!removeDado) {\n            return null\n        }\n\n        return(\n            <TableCell>\n                <Button \n                variant='contained'\n                color='primary'\n                onClick = { () => { removeDado(id) }}>\n                    Remover\n                </Button>\n            </TableCell>\n        );\n    }\n\nconst TituloDeleta = () =>{\n\n    if(!removeDado) {\n        return null\n    }\n    return <TableCell>Remover</TableCell>\n}\n\n    return (\n        <Table>\n                <TableHead>\n                <TableRow>\n                    {\n                        campos.map((campo, index) =>{\n                            return(\n                                <TableCell key ={index}>{campo.titulo}</TableCell>\n                            ); \n                        })                        \n                    }      \n                     <TituloDeleta\n                        removeDado ={removeDado}\n                        />              \n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {\n                dados.map((dados, index) => {                    \n                    return (\n                        <TableRow key= {dados.id}>\n                            {\n                                campos.map((campo, index) => (\n                                       <TableCell key= {index}>{dados[campo.dado]}</TableCell> \n                                    ))\n                            } \n                           <CellDeleta \n                           id={dados.id}\n                           removeDado={ removeDado }\n                           />\n                        </TableRow>\n                         );\n                })\n                }\n            </TableBody>\n        </Table>\n    );\n    \n}\n\nexport default Tabela;","import React from 'react';\r\nimport SnackBar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nexport default ({ open, handleClose, children, severity }) => {\r\n\r\n    return (\r\n        <SnackBar\r\n            open={open}\r\n            onClose={handleClose}\r\n\r\n            autoHideDuration={2000}\r\n            auto>\r\n            <Alert\r\n                onClose={handleClose}\r\n                variant='filled'\r\n                severity={severity}\r\n            >\r\n                {children}\r\n            </Alert>\r\n        </SnackBar>\r\n    );\r\n}","import validador from 'validator';\n\nclass FormValidator {\n\n    constructor(validacoes){\n        this.validacoes = validacoes;\n    }\n\n    valida(state){\n        \n        let validacao = this.valido();\n\n        this.validacoes.forEach(regra => {\n\n                if(!validacao[regra.campo].isInvalid){\n                    const campoValor = state[regra.campo.toString()];\n                    const args = regra.agrs || [];\n                    const metodoValidacao = typeof regra.metodo === 'string' ?\n                        validador[regra.metodo] : regra.metodo;\n\n                    if(metodoValidacao(campoValor, ...args, state) !== regra.validoQuando){\n                        validacao[regra.campo] = {\n                            isInvalid: true,\n                            mensagem: regra.mensagem\n                        };\n                        validacao.isValid = false;\n\n                    }\n                }\n        });\n    \n        return validacao;\n\n    }\n\n    valido(){\n        const validacao = {};\n\n        this.validacoes.map(regra => {\n            return validacao[regra.campo] = {isInvalid: false, mensagem:''}\n        });\n        return { isValid: true, ...validacao}\n    }\n\n}\nexport default FormValidator;","import M from 'materialize-css';\n\nconst PopUp = {\n    exibeMensagem : (status, msg) =>{\n\n        if(status === \"success\"){\n            M.toast({html: msg, classes: 'green', displayLength: 2000});\n        }\n\n        if(status === 'error'){\n            M.toast({html: msg, classes: 'red', displayLength: 2000});\n        }\n\n    }\n}\n\nexport default PopUp;","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport Toast from '../Toast/Toast';\nimport FormValidator from '../../utils/FormValidator';\nimport PopUp from '../../utils/PopUp'\n\nclass Formulario extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.validador = new FormValidator([\n            {\n                campo: 'nome',\n                metodo: 'isEmpty',\n                validoQuando: false,\n                mensagem: 'Entre com um nome'\n            },\n            {\n                campo: 'livro',\n                metodo: 'isEmpty',\n                validoQuando: false,\n                mensagem: 'Entre com um livro'\n            },\n            {\n                campo: 'preco',\n                metodo: 'isInt',\n                args: [{ min: 0, max: 99999 }],\n                validoQuando: true,\n                mensagem: 'Entre com um valor numérico'\n            }\n        ])\n\n        this.stateInicial = {\n            nome: '',\n            livro: '',\n            preco: '',\n            validacao: this.validador.valido(),\n            mensagem:{\n                open:false,\n                texto:'',\n                severity:'success'\n            }\n        }\n\n        this.state = this.stateInicial;\n\n    }\n\n    escutadorDeInput = event => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    submitFormulario = () => {\n        const validacao = this.validador.valida(this.state);\n\n        if (validacao.isValid) {\n            this.props.escutadorDeSubmit(this.state);\n            this.setState(this.stateInicial);\n        } else {\n            const { nome, livro, preco } = validacao;\n            const campos = [nome, livro, preco];\n            const camposInvalidos = campos.filter(elem => {\n                return elem.isInvalid;\n            });\n            const erros = camposInvalidos.reduce((texto, campo)=> texto + campo.mensagem + '. ','')\n\n            console.log(erros);\n            \n\n            this.setState({ mensagem:{\n                open: true,\n                severity:'error',\n                texto: erros\n            }})\n        }\n\n    }\n\n    render() {\n\n        const { nome, livro, preco } = this.state;\n\n        return (\n            <>\n                <Toast\n                    open={this.state.mensagem.open}\n                    handleClose={() => this.setState({ mensagem: {open: false} })}\n                    severity = {this.state.mensagem.severity}\n                >\n                    {this.state.mensagem.texto}\n                </Toast>\n\n\n                <form>\n                    <Grid container alignItems='center' spacing={2}>\n                        <Grid item>\n                            <TextField\n                                id='nome'\n                                label='Nome'\n                                variant='outlined'\n                                name='nome'\n                                value={nome}\n                                onChange={this.escutadorDeInput}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                id='livro'\n                                label='Livro'\n                                variant='outlined'\n                                name='livro'\n                                value={livro}\n                                onChange={this.escutadorDeInput}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                id='preco'\n                                label='Preço'\n                                variant='outlined'\n                                name='preco'\n                                value={preco}\n                                onChange={this.escutadorDeInput}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                onClick={this.submitFormulario}\n                                type=\"button\">\n                                Salvar\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </>\n        );\n    }\n}\nexport default Formulario;","const urlBase = 'http://localhost:8000/api/autor';\n\nconst consumeApi = (parameter = '', method = 'GET', body) =>{\n    return fetch(`${urlBase}${parameter}`, {method, headers: { 'content-type' : 'application/json'},body})\n    .then(res => ApiService.TrataErros(res))\n    .then(res => res.json());\n}\n\nconst ApiService = {\n\n    ListaAutores : () => consumeApi(),\n    CriaAutor : autor => consumeApi('', 'POST', autor),\n    ListaNomes: () => consumeApi('/nome'),\n    ListaLivros: () => consumeApi('/livro'),\n    RemoveAutor: id => consumeApi(`/${id}`,'DELETE'),\n    TrataErros : res =>{\n        if(!res.ok){\n            \n            throw Error(res.responseText);\n        }\n        return res;\n    } \n\n}\nexport default ApiService;","import React, { Component, Fragment } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './Home.css';\nimport Header from '../../Components/Header/Header';\nimport Tabela from '../../Components/Tabela/Tabela';\nimport Form from '../../Components/Formulario/Formulario';\nimport PopUp from '../../utils/PopUp';\nimport ApiService from '../../utils/ApiService';\n\nclass Home extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      autores: [],\n    };\n  }\n  \n  removeAutor = id => {\n\n    const { autores } = this.state;\n\n    const autoresAtualizado = autores.filter(autor => {\n        return autor.id !== id;\n    });\n    ApiService.RemoveAutor(id)\n              .then(res =>{\n                if(res.message === 'deleted'){\n                  this.setState({autores : [...autoresAtualizado]})\n                  PopUp.exibeMensagem(\"error\", \"Autor removido com sucesso\");\n                }\n              })\n              .catch(err => PopUp.exibeMensagem(\"error\", \"Erro na comunicação com a API ao tentar remover o autor\"));\n    \n  }\n\n  escutadorDeSubmit = autor => {\n    ApiService.CriaAutor(JSON.stringify(autor))\n              .then(res =>{  \n                if(res.message === 'success'){\n                  this.setState({ autores:[...this.state.autores, res.data] });\n                  PopUp.exibeMensagem(\"success\", \"Autor adicionado com sucesso\");\n                }\n                \n              })\n              .catch(err => PopUp.exibeMensagem(\"error\", \"Erro na comunicação com a API ao tentar criar o autor\"));\n\n    \n  }\n\n\n  componentDidMount(){\n    ApiService.ListaAutores()\n                .then(res => {\n                  if(res.message === 'success'){\n                    this.setState({autores : [...this.state.autores, ...res.data]})\n                  }\n                  \n                })\n                .catch(err => PopUp.exibeMensagem(\"error\", \"Erro na comunicação com a API ao tentar listar os autores\"));\n  }\n\n  render() {\n\n    const campos = [ {titulo: 'Autores', dado: 'nome'},\n                    {titulo: 'Livros', dado: 'livro'},\n                    {titulo: 'Preços', dado: 'preco'}\n                  ]\n\n    return (\n      <Fragment>\n        <Header />\n        <div className=\"container mb-10\">\n        <h1>Casa do Código</h1>\n        <Form escutadorDeSubmit={this.escutadorDeSubmit}/>\n        <Tabela campos ={campos} dados={this.state.autores} removeDado={this.removeAutor} />\n        </div>\n      </Fragment>\n    );\n  }\n\n}\n\nexport default Home;\n","import React, { Fragment } from 'react';\nimport Header from '../../Components/Header/Header';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useEstilos = makeStyles({\n    titulo: {\n        textAlign : 'center',\n        color: 'blue'\n    }\n})\n\nconst Sobre = () =>{\n    const classes = useEstilos();\n    return (\n        <Fragment>\n            <Header />\n            <Container maxWidth='sm'>\n                <Typography className={ classes.titulo } variant='h1' component='h2'>\n                    Sobre\n                </Typography>\n                <Typography variant='body1' component='p'>\n                    A casa do código desenvolve todo tipo de programa.\n                </Typography>\n            </Container>           \n        </Fragment>\n    );\n}\nexport default Sobre;","import React, { Component, Fragment } from 'react';\nimport Header from '../../Components/Header/Header';\nimport Tabela from '../../Components/Tabela/Tabela';\nimport ApiService from '../../utils/ApiService';\nimport PopUp from '../../utils/PopUp';\nclass Livros extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            livros: []\n        };\n    }\n\n    componentDidMount(){\n        ApiService.ListaLivros()\n                    .then(res => {\n                        if(res.message === 'success'){\n                            PopUp.exibeMensagem('success', 'Livros listados com sucesso');\n                            this.setState({livros : [...this.state.livros, ...res.data]});\n\n                        }\n                    })\n                    .catch(err => PopUp.exibeMensagem('error', 'Falha na comunicação com a API ao listar os livros'));\n    }\n\n    render() {\n\n        const campos = [{titulo:'Livros', dado: 'livro'}]\n        return (\n            <Fragment>\n                <Header />\n                <div className='container'>\n                    <h1>Página de Livros</h1>\n                    <Tabela \n                    dados={this.state.livros} \n                    campos={campos}/>\n                </div>\n            </Fragment>\n        );\n    }\n\n}\nexport default Livros;","import React, { Component, Fragment } from 'react';\nimport Header from '../../Components/Header/Header';\nimport Tabela from '../../Components/Tabela/Tabela';\nimport ApiService from '../../utils/ApiService';\nimport PopUp from '../../utils/PopUp';\n\nclass Autores extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nomes: []\n        };\n    }\n\n    componentDidMount(){\n        ApiService.ListaNomes()\n                .then(res => {\n                    if(res.message === 'success'){\n                        PopUp.exibeMensagem('success', 'Autores Listados com sucesso');\n                        this.setState({nomes: [...this.state.nomes, ...res.data]});\n                    }\n                })\n                .catch(err => PopUp.exibeMensagem('error', 'Falha na comunicação com a API ao listar os autores'));\n    }\n\n    render() {\n        const campos = [{titulo: 'Autores', dado: 'nome'}]\n        return (\n            <Fragment>\n                <Header />\n                <div className='container'>\n                    <h1>Página de Autores</h1>\n                    <Tabela \n                        dados={this.state.nomes}\n                        campos={ campos } />\n                </div>\n            </Fragment>\n        );\n    }\n\n}\nexport default Autores;","import React, { Fragment } from 'react';\nimport Header from '../../Components/Header/Header';\n\nconst NotFound = () =>{\n\n    return (\n        <Fragment>\n            <Header />\n            <h1>Página Não Encontrada</h1>\n        </Fragment>\n    );\n}\nexport default NotFound;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './Pages/Home/Home';\nimport Sobre from './Pages/Sobre/Sobre';\nimport Livros from './Pages/Livros/Livros';\nimport Autores from './Pages/Autores/Autores';\nimport NotFound from './Pages/NotFound/NotFound';\n\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route path='/' exact={true} component={Home} />\n            <Route path='/sobre' component={Sobre} />\n            <Route path='/livros' component={Livros} />\n            <Route path='/autores' component={Autores} />\n            <Route component={NotFound} />\n\n        </Switch>\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}